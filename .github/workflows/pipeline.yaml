name: "Pipeline"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: main_workflow

permissions:
  contents: write
  pages: write
  checks: write
  id-token: write
  packages: write

jobs:
  deploy_docker_image:
    name: Deploy Docker Image
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_AUTH0_AUDIENCE: ${{ secrets.BACKEND_AUTH0_AUDIENCE }}
          envkey_AUTH0_BASE_URL: ${{ secrets.BACKEND_AUTH0_BASE_URL }}
          envkey_AUTH0_CLIENT_ID: ${{ secrets.BACKEND_AUTH0_CLIENT_ID }}
          envkey_AUTH0_CLIENT_SECRET: ${{ secrets.BACKEND_AUTH0_CLIENT_SECRET }}
          envkey_AUTH0_USERNAME: ${{ secrets.BACKEND_AUTH0_USERNAME }}
          envkey_AUTH0_PASSWORD: ${{ secrets.BACKEND_AUTH0_PASSWORD }}
          envkey_AUTH0_SCOPE: ${{ secrets.BACKEND_AUTH0_SCOPE }}
          envkey_MONGO_URL: mongodb://mongo:27017
          directory: .
          file_name: .env
          fail_on_empty: true

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ github.repository }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          tags: "latest,${{ github.run_number }}"

  deploy_documentation:
    name: Deploy Documentation
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - run: npm ci
      - run: npm run update-docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  deploy:
    name: Deploy to AWS Lambda
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ deploy_documentation, deploy_docker_image ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ dev, prod ]
    environment: ${{ matrix.environment }}
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.BACKEND_AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.BACKEND_AWS_SECRET_ACCESS_KEY}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          envkey_AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
          envkey_MONGO_URL: ${{secrets.DATABASE_URL}}
          directory: .
          file_name: .env
          fail_on_empty: true

      - run: npm ci
      - run: npm i serverless

      - name: ${{ matrix.environment }} Deployment
        run: npm run deploy
        env:
          STAGE: ${{ matrix.environment }}